/dts-v1/;
/plugin/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/rockchip.h>

/ {
	metadata {
		title = "Enable Raspberry Pi Camera v2 on CAM1";
		compatible = "radxa,radxa-cm3-rpi-cm4-io";
		category = "camera";
		exclusive = "csi2_dphy1";
		description = "Enable Raspberry Pi Camera v2 on CAM1.";
	};

	fragment@0 {
		target-path = "/";

		__overlay__ {
			ext_cam_clk_imx219_0: ext-cam-clk-imx219-0 {
				status = "okay";
				compatible = "fixed-clock";
				clock-frequency = <24000000>;
				clock-output-names = "ext_cam_clk_imx219_0";
				#clock-cells = <0>;
			};

			camera_pwdn_gpio: camera-pwdn-gpio {
				status = "okay";
				compatible = "regulator-fixed";
				regulator-name = "camera_pwdn_gpio";
				regulator-always-on;
				regulator-boot-on;
				enable-active-high;
				pwdn-gpios = <&gpio4 RK_PC1 GPIO_ACTIVE_HIGH>;
				pinctrl-names = "default";
				pinctrl-0 = <&cam_pwdn_gpio>;
			};
		};
	};

	fragment@1 {
		target = <&i2c0>;

		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&i2c0_xfer>;

			#address-cells = <1>;
			#size-cells = <0>;

			imx219: imx219@10 {
				status = "okay";
				compatible = "sony,imx219";
				reg = <0x10>;

				clocks = <&ext_cam_clk_imx219_0>;
				clock-names = "ext_cam_clk_imx219_0";

				rotation = <180>;

				rockchip,camera-module-index = <1>;
				rockchip,camera-module-facing = "front";
				rockchip,camera-module-name = "rpi-camera-v2";
				rockchip,camera-module-lens-name = "default";

				port {
					imx219_1_out: endpoint {
						remote-endpoint = <&csi2dphy1_ucam1>;
						data-lanes = <1 2>;
					};
				};
			};
		};
	};

	fragment@2 {
		target = <&csi2_dphy_hw>;

		__overlay__ {
			status = "okay";
		};
	};

	fragment@3 {
		target = <&csi2_dphy1>;

		__overlay__ {
			status = "okay";

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@0 {
					reg = <0>;
					#address-cells = <1>;
					#size-cells = <0>;

					csi2dphy1_ucam1: endpoint@1 {
						reg = <1>;
						remote-endpoint = <&imx219_1_out>;
						data-lanes = <1 2>;
					};
				};

				port@1 {
					reg = <1>;
					#address-cells = <1>;
					#size-cells = <0>;

					csi2dphy1_out: endpoint@1 {
						reg = <1>;
						remote-endpoint = <&isp0_in>;
					};
				};
			};
		};
	};

	fragment@4 {
		target = <&rkisp_vir0>;

		__overlay__ {
			status = "okay";

			port {
				#address-cells = <1>;
				#size-cells = <0>;

				isp0_in: endpoint@0 {
					reg = <0>;
					remote-endpoint = <&csi2dphy1_out>;
				};
			};
		};
	};

	fragment@5 {
		target = <&rkisp>;

		__overlay__ {
			status = "okay";
		};
	};

	fragment@6 {
		target = <&rkisp_mmu>;

		__overlay__ {
			status = "okay";
		};
	};

	fragment@7 {
		target = <&rkcif_mmu>;

		__overlay__ {
			status = "okay";
		};
	};

	fragment@8 {
		target = <&rkcif>;

		__overlay__ {
			status = "okay";
		};
	};


	fragment@9 {
		target = <&pinctrl>;

		__overlay__ {
			camera {
				cam_pwdn_gpio: cam-pwdn-gpio {
					rockchip,pins = <4 RK_PC1 RK_FUNC_GPIO &pcfg_pull_up>;
				};
			};
		};
	};
};
